{"version":3,"sources":["App.js","markedText.js","reportWebVitals.js","index.js"],"names":["marked","require","setOptions","breaks","App","props","handleChange","e","setState","markedown","target","value","state","bind","this","mark","console","log","className","id","defaultValue","onChange","dangerouslySetInnerHTML","__html","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAIMA,EAASC,EAAQ,IACvBD,EAAOE,WAAW,CAChBC,QAAQ,I,IA2CKC,E,kDAvCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,aAAe,SAACC,GACX,EAAKC,SAAS,CACZC,UAAWF,EAAEG,OAAOC,SARzB,EAAKC,MAAQ,CACXH,UCbQ,smCDeT,EAAKH,aAAe,EAAKA,aAAaO,KAAlB,gBALJ,E,0CAcnB,WACE,IAAOJ,EAAaK,KAAKF,MAAlBH,UAEDM,EAAOf,EAAOS,GAEpB,OADAO,QAAQC,IAAIF,GAEV,sBAAKG,UAAU,MAAf,UACA,sBAAKA,UAAU,cAAf,UACE,wCACA,0BACAC,GAAG,SACHC,aAAcX,EACdY,SAAUP,KAAKR,kBAIjB,sBAAKY,UAAU,OAAf,UACA,yCACA,qBAAKC,GAAG,UAAUG,wBAAyB,CAACC,OAAQR,e,GAjCxCS,aEGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8983a010.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport MARkEDTEXT from './markedText';\n\nconst marked = require(\"marked\");\nmarked.setOptions({\n  breaks: true\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      markedown: MARkEDTEXT\n     }\n     this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange = (e) =>{\n       this.setState({\n         markedown: e.target.value\n       })\n  }\n\n  render() {\n    const {markedown} = this.state;\n\n    const mark = marked(markedown);\n    console.log(mark);\n    return ( \n      <div className=\"App\">\n      <div className=\"textHoleder\">\n        <h5>Editor</h5>\n        <textarea\n        id=\"editor\"\n        defaultValue={markedown}\n        onChange={this.handleChange}\n        />\n      </div>\n\n      <div className=\"view\">\n      <h5>Preview</h5>\n      <div id=\"preview\" dangerouslySetInnerHTML={{__html: mark}}/>\n      </div>\n    </div>\n     );\n  }\n}\n\nexport default App;\n","let MARkEDTEXT = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | -------------\r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want!\r\n1. And last but not least, let's not forget embedded images:\r\n\r\n![React Logo w/ Text](https://goo.gl/Umyytc)\r\n`;\r\n\r\nexport default MARkEDTEXT;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}